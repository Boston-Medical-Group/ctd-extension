{"version":3,"file":"background.js","mappings":"mBAGA,MAAMA,EACG,QAmBT,SAASC,EAAaC,GAGpBC,OAAOC,QAAQC,MAAMC,IAAI,CACvBC,MAAOL,IACNM,aAIL,CAQA,SAASC,IAEPN,OAAOO,KAAKC,OAAO,CACjBC,IAFW,2BAGXC,QAAQ,GAEZ,CAEAL,eAAeM,IACb,MAAOC,SAAaZ,OAAOO,KAAKM,MAAM,CACpCJ,IAAK,CAAC,kBAAmB,2BAE3B,OAAOG,CACT,CA0BAZ,OAAOc,QAAQC,YAAYC,aAAYX,UACrCP,EAAaD,GACb,MAAMe,QAAYD,IACdC,GACFZ,OAAOO,KAAKU,OAAOL,EAAIM,GACzB,IAGFlB,OAAOc,QAAQK,UAAUH,aAAY,CAACI,EAASC,EAAQC,KAChC,cAAjBF,EAAQrB,MAOVuB,EAAa,CACXC,QAPc,MACdF,EAAOT,IAAM,MAAQ,8EAUE,SAAvBQ,EAAQI,YAAgD,iBAAvBJ,EAAQI,YA7C/CnB,eAAmCe,GACjCpB,OAAOC,QAAQC,MAAMuB,IAAI,SAASpB,OAChCD,MAAOL,MAEP,GAtDO,YAsDHA,EAAwB,CAC1B,MAAMa,QAAYD,IACdC,SACIZ,OAAOO,KAAKmB,YAAYd,EAAIM,GAAI,IACjCE,EACHO,KAAM,qBAEF3B,OAAOO,KAAKqB,OAAOhB,EAAIM,GAAI,CAC/BR,QAAQ,MAGVZ,EAAaD,GACbS,IAEJ,MACER,EApEG,QAqEL,GAEJ,CAwBI+B,CAAoBT,EACtB,IAIFpB,OAAO8B,OAAOC,UAAUf,aAAYX,UAClC,MAAMO,QAAYD,IACdC,EACFZ,OAAOO,KAAKqB,OAAOhB,EAAIM,GAAI,CACzBR,QAAQ,IAGVJ,GACF,G","sources":["webpack://twilio-hubspot-ctd/./src/background.js"],"sourcesContent":["'use strict';\n\nlet smsStatus = false;\nconst THEME = {\n  READY: \"READY\",\n  WORKING: \"WORKING\",\n  ERROR: \"ERROR\"\n};\nconst THEME_VAR = {\n  [THEME.READY]: {\n    icon: \"seaxGray.png\",\n    text: \"ready\"\n  },\n  [THEME.WORKING]: {\n    icon: \"seaxGreen.png\",\n    text: \"working\"\n  },\n  [THEME.ERROR]: {\n    icon: \"seaxRed.png\",\n    text: \"error\"\n  },\n};\n\nfunction setThemeType(type) {\n  // chrome.action.setBadgeText({ text: \"ON\" });\n  // chrome.action.setBadgeBackgroundColor({ color: \"#4688F1\" });\n  chrome.storage.local.set({\n    theme: type\n  }, async () => {\n    \n    // console.log(\"change theme\", type);\n  });\n}\n\n\n// With background scripts you can communicate with popup\n// and contentScript files.\n// For more information on background script,\n// See https://developer.chrome.com/extensions/background_pages\n\nfunction openFlexTab() {\n  var newURL = \"https://flex.twilio.com/\";\n  chrome.tabs.create({\n    url: newURL,\n    active: true\n  });\n}\n\nasync function getActiveTab() {\n  const [tab] = await chrome.tabs.query({\n    url: [\"*://localhost/*\", \"*://flex.twilio.com/*\"],\n  });\n  return tab;\n}\n\nasync function sendMsgToFlexScript(request) {\n  chrome.storage.local.get(\"theme\", async ({\n    theme: type\n  }) => {\n    if (type !== THEME.WORKING) {\n      const tab = await getActiveTab();\n      if (tab) {\n        await chrome.tabs.sendMessage(tab.id, {\n          ...request,\n          from: \"BACKGROUND\",\n        });\n        await chrome.tabs.update(tab.id, {\n          active: true\n        });\n      } else {\n        setThemeType(THEME.READY);\n        openFlexTab();\n      }\n    } else {\n      setThemeType(THEME.ERROR);\n    }\n    })\n}\n\nchrome.runtime.onInstalled.addListener(async () => {\n  setThemeType(THEME.READY);\n  const tab = await getActiveTab();\n  if (tab) {\n    chrome.tabs.reload(tab.id);\n  }\n});\n\nchrome.runtime.onMessage.addListener((request, sender, sendResponse) => {\n  if (request.type === 'GREETINGS') {\n    const message = `Hi ${\n      sender.tab ? 'Con' : 'Pop'\n    }, my name is Bac. I am from Background. It's great to hear from you.`;\n\n    // Log message coming from the `request` parameter\n    // Send a response message\n    sendResponse({\n      message,\n    });\n  }\n\n  if (request.actionType === \"dial\" || request.actionType === \"gotoCustomer\") {\n    sendMsgToFlexScript(request);\n  }\n});\n\n\nchrome.action.onClicked.addListener(async () => {\n  const tab = await getActiveTab();\n  if (tab) {\n    chrome.tabs.update(tab.id, {\n      active: true\n    });\n  } else {\n    openFlexTab();\n  }\n});"],"names":["THEME","setThemeType","type","chrome","storage","local","set","theme","async","openFlexTab","tabs","create","url","active","getActiveTab","tab","query","runtime","onInstalled","addListener","reload","id","onMessage","request","sender","sendResponse","message","actionType","get","sendMessage","from","update","sendMsgToFlexScript","action","onClicked"],"sourceRoot":""}